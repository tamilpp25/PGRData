---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by admin.
--- DateTime: 2020/7/23 17:18
---

local this = XLuaUiManager.Register(XLuaUi, "UiSetAccount")

local LookStatus = {
    Clear = 1,
    Pass = 2,
    Switch = 3
}

function this:OnAwake()
    XTool.InitUiObject(self)
    XUiHelper.RegisterClickEvent(self, self.BtnTanchuangClose, self.OnCloseSetAccount)
    XUiHelper.RegisterClickEvent(self, self.BtnLook, self.OnLookPassword)
    XUiHelper.RegisterClickEvent(self, self.BtnConfirm, self.OnConfirm)
    XUiHelper.RegisterClickEvent(self, self.BtnConfirmChange, self.OnConfirm)
end

function this:OnStart(loginCallback, cancelCallback)
    self.LookStatus = LookStatus.Pass;
    self.InFPassword.text = ""
    self.ImgLook.gameObject:SetActiveEx(false)
    self.ImgUnlook.gameObject:SetActiveEx(true)
    self.BtnConfirm.gameObject:SetActiveEx(XUserManager.PasswordStatus == 0)
    self.BtnConfirmChange.gameObject:SetActiveEx(XUserManager.PasswordStatus == 1)
    self.InFID.text = XUserManager.UserId
    self.ClearPassword = ""
    self:SetLookStatus()
    self.LoginCallback = loginCallback
    self.CancelCallback = cancelCallback
end

function this:CheckValid()
    local str = self.InFPassword.text
    if #str < 8 or #str > 20 then
        return false
    end
    local numCount = 0
    local alphaCount = 0

    for i = 1, #str do
        local c = string.byte(str, i)
        if c >= string.byte('a') and c <= string.byte('z') or c >= string.byte('A') and c <= string.byte('Z') then
            alphaCount = alphaCount + 1
        elseif c >= string.byte('0') and c <= string.byte('9') then
            numCount = numCount + 1
        end
    end

    if numCount + alphaCount ~= #str then
        return false
    end

    if numCount == 0 or alphaCount == 0 then
        return false
    end

    return true
end

function this:OnConfirm()
    if self.LoginCallback then
        if not self:CheckValid() then
            XUiManager.TipError("半角英数字8～20文字以内で設定して下さい")
        else
            self.LoginCallback(self.InFID.text, self.InFPassword.text)
        end
    end
    XLuaUiManager.Close("UiSetAccount")
end


function this:OnCloseSetAccount()
    XLuaUiManager.Close("UiSetAccount")
    if self.CancelCallback then
        self.cancelCallback()
    end
end

function this:OnLookPassword()
    self.LookStatus = LookStatus.Switch - self.LookStatus
    self:SetLookStatus()
end

function this:SetLookStatus()
    if self.LookStatus == LookStatus.Clear then
        self.InFPassword.contentType = CS.UnityEngine.UI.InputField.ContentType.Standard
    else
        self.InFPassword.contentType = CS.UnityEngine.UI.InputField.ContentType.Password
    end
    self.ImgLook.gameObject:SetActiveEx(self.LookStatus == LookStatus.Clear)
    self.ImgUnlook.gameObject:SetActiveEx(self.LookStatus == LookStatus.Pass)
    self.ClearPassword = self.InFPassword.text
    self.InFPassword.text = ""
    self.InFPassword.text = self.ClearPassword
end