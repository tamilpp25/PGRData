---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by heyupeng.
--- DateTime: 2024/5/16 11:09
---

---@class XPurchaseWeekCardData
local XPurchaseWeekCardData = XClass(nil, "XPurchaseWeekCardData")

function XPurchaseWeekCardData:Ctor()
    self.Id = 0
    self.Name = ""
    self.UiType = 0
    self.IsGotToday = false -- 当天是否领取（当前未领取登录会推送数据）
    self.RoundCount = 0 -- 总轮次数量
    self.RewardInfos = {}  -- 奖励信息
    self.RewardIndexDic = {} -- 奖励领取的下标字典
    self.OneRoundDayCount = 0 -- 一轮有多少天
    self.TotalDays = 0 -- 所有轮次总天数
    self.CurDay = 0 -- 当前是第几天（所有轮次下）
    self.CurRound = 0 -- 当前是第几轮
    self.CurRoundDay = 0 -- 在当前轮次下是第几天
    self.PurchaseSignInId = 0 -- 礼包对应的签到Id
    self.SkipId = 0
    self.DailyRewardRemainDay = 0 -- 剩余天数（包括今天）
    self.BetterRewardIndex = {} -- 特殊奖励索引（从1开始）
    self.Desc = ""
end

function XPurchaseWeekCardData:UpdateData(data, isNotify)
    self.Id = data.Id
    self.Name = data.Name
    self.UiType = data.UiType

    local rewardIndexList = {}
    if isNotify then
        -- 通过推送初始化
        rewardIndexList = data.RewardIndexList
        self.RoundCount = data.SignRound ~= 0 and data.SignRound or 1 -- 总轮次数量
        self.RewardInfos = data.PurchaseSignInRewardInfos  -- 奖励信息
        self.PurchaseSignInId = data.PurchaseSignInShowId
        self.BetterRewardIndex = self.GetBetterDicByIndexStr(data.BetterIndexStr)
        self.Desc = data.Desc
    else
        -- 通过请求礼包数据初始化
        if data.PurchaseSignInInfo then
            local info = data.PurchaseSignInInfo
            local purchaseSignInData = info.PurchaseSignInData and info.PurchaseSignInData or 1
            if purchaseSignInData then
                rewardIndexList = purchaseSignInData.RewardIndexList
                self.RoundCount = purchaseSignInData.SignRound
            end
            self.RewardInfos = info.PurchaseSignInRewardInfos  -- 奖励信息
            self.PurchaseSignInId = info.PurchaseSignInShowId
            self.BetterRewardIndex = self.GetBetterDicByIndexStr(info.BetterIndexStr)
        end
        self.Desc = data.Desc
    end
    self.IsGotToday = data.IsDailyRewardGet -- 当天是否领取
    self.RewardIndexDic = {} -- 奖励领取的下标字典
    if rewardIndexList and next(rewardIndexList) then
        for _, index in ipairs(rewardIndexList) do
            self.RewardIndexDic[index] = index
        end
    end
    self.OneRoundDayCount = XTool.GetTableCount(self.RewardInfos)
    self.TotalDays = self.OneRoundDayCount * self.RoundCount
    self.CurDay = self.TotalDays - data.DailyRewardRemainDay + 1 -- 当前是第几天（所有轮次下）
    self.CurRound = math.ceil(self.CurDay / self.OneRoundDayCount) -- 当前是第几轮
    local curRoundDay = self.CurDay % self.OneRoundDayCount
    self.CurRoundDay = curRoundDay == 0 and self.OneRoundDayCount or curRoundDay -- 在当前轮次下是第几天
    self.DailyRewardRemainDay = data.DailyRewardRemainDay
end

function XPurchaseWeekCardData:GetId()
    return self.Id
end

function XPurchaseWeekCardData:GetName()
    return self.Name
end

function XPurchaseWeekCardData:GetUiType()
    return self.UiType
end

function XPurchaseWeekCardData:GetIsGotToday()
    return self.IsGotToday
end

function XPurchaseWeekCardData:GetRoundCount()
    return self.RoundCount
end

function XPurchaseWeekCardData:GetRewardInfos()
    return self.RewardInfos
end

function XPurchaseWeekCardData:GetRewardIndexDic()
    return self.RewardIndexDic
end

function XPurchaseWeekCardData:GetOneRoundDayCount()
    return self.OneRoundDayCount
end

function XPurchaseWeekCardData:GetTotalDays()
    return self.TotalDays
end

function XPurchaseWeekCardData:GetCurDay()
    return self.CurDay
end

function XPurchaseWeekCardData:GetCurRound()
    return self.CurRound
end

function XPurchaseWeekCardData:GetCurRoundDay()
    return self.CurRoundDay
end

function XPurchaseWeekCardData:GetPurchaseSignInId()
    return self.PurchaseSignInId
end

function XPurchaseWeekCardData:GetDailyRewardRemainDay()
    return self.DailyRewardRemainDay
end

function XPurchaseWeekCardData:GetDesc()
    return self.Desc
end

-- 根据轮次和该轮次第几天判断奖励是否领取
function XPurchaseWeekCardData:CheckIsGotByRoundAndDay(roundIndex, dayIndex)
    if self.RewardIndexDic[(roundIndex - 1) * self.OneRoundDayCount + dayIndex] then
        return true
    end

    return false
end

-- 检查是否是以前的奖励包括今天
function XPurchaseWeekCardData:CheckIsPreviousDay(roundIndex, dayIndex)
    return ((roundIndex - 1) * self.OneRoundDayCount + dayIndex) <= self:GetCurDay()
end

function XPurchaseWeekCardData:SetWeekCardGotToday()
    self.IsGotToday = true
    self.RewardIndexDic[self.CurDay] = self.CurDay
    XEventManager.DispatchEvent(XEventId.EVENT_SING_IN_WEEK_CARD_GOT)
end

function XPurchaseWeekCardData:CheckIsBetterRewardByIndex(dayIndex)
    return self.BetterRewardIndex[dayIndex] ~= nil
end

function XPurchaseWeekCardData.GetBetterDicByIndexStr(batterIndexStr)
    local betterIndexDic = {}
    -- 通过“|”分割的字符串
    if not string.IsNilOrEmpty(batterIndexStr) then
        local betterIndexList = string.Split(batterIndexStr, "|")
        for _, index in ipairs(betterIndexList) do
            betterIndexDic[tonumber(index)] = tonumber(index)
        end
    end
    
    return betterIndexDic
end

return XPurchaseWeekCardData