---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by heyupeng.
--- DateTime: 2024/6/3 15:43
---

local XSucceedBossChapterData = require("XModule/XSucceedBoss/DataEntity/XSucceedBossChapterData")
local XSucceedBossMonsterData = require("XModule/XSucceedBoss/DataEntity/XSucceedBossMonsterData")
local XSucceedBossBattleInfoData = require("XModule/XSucceedBoss/DataEntity/XSucceedBossBattleInfoData")

---@class XSucceedBossData
local XSucceedBossData = XClass(nil, "XSucceedBossData")

function XSucceedBossData:Ctor()
    self.ActivityId = 0
    ---@type table<number, XSucceedBossChapterData>
    self.PassChapters = {}
    ---@type table<number, XSucceedBossMonsterData>
    self.PassMonsters = {}
    ---@type XSucceedBossBattleInfoData
    self.BattleInfo = nil
end

function XSucceedBossData:UpdateByNotify(data)
    self.ActivityId = data.ActivityId
    self.PassChapters = {}
    self:UpdatePassChapters(data.PassChapters)
    self.PassMonsters = {}
    self:UpdatePassMonsters(data.PassMonsters)
    
    self.BattleInfo = XSucceedBossBattleInfoData.New()
    self.BattleInfo:UpdateData(data.BattleInfo)
end

function XSucceedBossData:GetActivityId()
    return self.ActivityId
end

function XSucceedBossData:GetPassChapter(chapterId)
    return self.PassChapters[chapterId]
end

function XSucceedBossData:GetPassMonster(monsterId)
    return self.PassMonsters[monsterId]
end

function XSucceedBossData:GetBattleInfo()
    return self.BattleInfo
end

function XSucceedBossData:UpdateBattleInfo(battleInfo)
    if not self.BattleInfo then
        self.BattleInfo = XSucceedBossBattleInfoData.New()
    end
    self.BattleInfo:UpdateData(battleInfo)
end

function XSucceedBossData:UpdatePassChapters(passChapters)
    for _, v in ipairs(passChapters) do
        local chapterData = self.PassChapters[v.ChapterId]
        if not chapterData then
            chapterData = XSucceedBossChapterData.New()
            self.PassChapters[v.ChapterId] = chapterData
        end
        chapterData:UpdateData(v)
    end
end

function XSucceedBossData:UpdatePassMonsters(passMonsters)
    for _, v in ipairs(passMonsters) do
        local monsterData = self.PassMonsters[v.MonsterId]
        if not monsterData then
            monsterData = XSucceedBossMonsterData.New()
            self.PassMonsters[v.MonsterId] = monsterData
        end
        monsterData:UpdateData(v)
    end
end

function XSucceedBossData:ClearBattleInfo()
    self.BattleInfo = nil
end

return XSucceedBossData