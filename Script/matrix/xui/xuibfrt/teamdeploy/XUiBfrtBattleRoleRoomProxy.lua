---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by heyupeng.
--- DateTime: 2024/3/27 17:47
---
local tableInsert = table.insert

local CsXTextManager = CS.XTextManager

local XUiBattleRoleRoomDefaultProxy = require("XUi/XUiNewRoomSingle/XUiBattleRoleRoomDefaultProxy")
local XUiBfrtBattleRoleRoomProxy = XClass(XUiBattleRoleRoomDefaultProxy, "XUiBfrtBattleRoleRoomProxy")

function XUiBfrtBattleRoleRoomProxy:Ctor(team, stageId)
    self.Team = team
    self.StageId = stageId
end

---@param baseBattleRoleRoom XUiBattleRoleRoom
function XUiBfrtBattleRoleRoomProxy:AOPOnStartAfter(baseBattleRoleRoom)
    self._TempGroupTeam = XDataCenter.BfrtManager.GetViewGroupFightTeams()
    --self._ReplaceTeamData = {}
end

function XUiBfrtBattleRoleRoomProxy:AOPOnClickBtnBack(baseBattleRoleRoom)
    local team = baseBattleRoleRoom.Team
    self._UpdateData(baseBattleRoleRoom.StageId, team:GetFirstFightPos(), team:GetCaptainPos(),
            team:GetCurGeneralSkill(), team:GetEnterCgIndex(), team:GetSettleCgIndex())
    baseBattleRoleRoom:Close()

    return true
end

function XUiBfrtBattleRoleRoomProxy:AOPOnClickFight(baseBattleRoleRoom)
    local team = baseBattleRoleRoom.Team
    self._UpdateData(baseBattleRoleRoom.StageId, team:GetFirstFightPos(), team:GetCaptainPos(),
            team:GetCurGeneralSkill(), team:GetEnterCgIndex(), team:GetSettleCgIndex())
    baseBattleRoleRoom:Close()

    return true
end

function XUiBfrtBattleRoleRoomProxy:GetBtnEnterName()
    return CsXTextManager.GetText("UIBattleRoleRoomBtnConfirm")
end

function XUiBfrtBattleRoleRoomProxy:AOPOnCharacterClickBefore(baseBattleRoleRoom, index)
    local team = baseBattleRoleRoom.Team
    self._UpdateData(baseBattleRoleRoom.StageId, team:GetFirstFightPos(), team:GetCaptainPos(),
            team:GetCurGeneralSkill(), team:GetEnterCgIndex(), team:GetSettleCgIndex())
    XEventManager.DispatchEvent(XEventId.EVENT_BFRT_TEAM_UPDATE)
    XEventManager.DispatchEvent(XEventId.EVENT_BFRT_OPEN_BATTLE_ROOM_DETAIL, baseBattleRoleRoom.StageId, index)

    return true
end

function XUiBfrtBattleRoleRoomProxy._UpdateData(stageId, firstFightPos, captainPos, generalSkillId, enterCgIndex, settleCgIndex)
    XDataCenter.BfrtManager.SetTeamFirstFightPos(stageId, firstFightPos)
    XDataCenter.BfrtManager.SetTeamCaptainPos(stageId, captainPos)

    XDataCenter.BfrtManager.SetTeamGeneralSkillId(XDataCenter.BfrtManager.GetViewGroupId(), XDataCenter.BfrtManager.GetCurSelectTeamIdx(), generalSkillId)
    XDataCenter.BfrtManager.UpdateViewGroupGeneralSkills()

    XDataCenter.BfrtManager.SetTeamCgIndex(XDataCenter.BfrtManager.GetViewGroupId(), XDataCenter.BfrtManager.GetCurSelectTeamIdx(), enterCgIndex, settleCgIndex)
    XDataCenter.BfrtManager.UpdateViewCgIndexGroup()
end

--function XUiBfrtBattleRoleRoomProxy:_UpdateReplaceTeamData()
--    for _, replaceData in ipairs(self._ReplaceTeamData) do
--        XDataCenter.BfrtManager.SetViewGroupFightTeamData(replaceData.TeamIdx, replaceData.TeamPos, 0) -- 直接顶掉不进行替换
--    end
--    self._ReplaceTeamData = {}
--end

function XUiBfrtBattleRoleRoomProxy:FilterPresetTeamEntitiyIds(teamInfoData)
    --self._ReplaceTeamData = {}
    local teamInfoDataClone = XTool.Clone(teamInfoData)
    local teamData = teamInfoDataClone.TeamData

    local asyncDialogTip = asynTask(handler(self, self._DialogTipCharacterSame))

    for charPos, charId in pairs(teamData) do
        if XTool.IsNumberValid(charId) then
            local otherTeamIdx, otherTeamPos = self:_CheckCharacterSameToOtherTeam(charId)
            if otherTeamIdx > 0 then
                asyncDialogTip(teamData, otherTeamIdx, otherTeamPos, charId, charPos)
            end
        end
    end

    return teamInfoDataClone
end

function XUiBfrtBattleRoleRoomProxy:_CheckCharacterSameToOtherTeam(characterId)
    local viewGroupTeamData = XDataCenter.BfrtManager.GetViewGroupFightTeams()
    local curSelectTeamIdx = XDataCenter.BfrtManager.GetCurSelectTeamIdx()
    for teamIdx, teamData in pairs(viewGroupTeamData) do
        if curSelectTeamIdx ~= teamIdx then
            for charPos, charId in pairs(teamData) do
                if charId == characterId then
                    return teamIdx, charPos
                end
            end
        end
    end

    return 0, 0
end

function XUiBfrtBattleRoleRoomProxy:_DialogTipCharacterSame(teamData, otherTeamIdx, otherTeamPos, characterId, charPos, cb)
    local title = CsXTextManager.GetText("BfrtDeployTipTitle")
    local showCharacterId = XRobotManager.GetCharacterId(characterId)
    local characterName = XMVCA.XCharacter:GetCharacterName(showCharacterId)
    local echelonType = XDataCenter.BfrtManager.GetCurSelectFightType()
    local oldTeamName = XDataCenter.BfrtManager.GetEchelonNameTxt(echelonType, otherTeamIdx)
    local curSelectTeamIdx = XDataCenter.BfrtManager.GetCurSelectTeamIdx()
    local newTeamName = XDataCenter.BfrtManager.GetEchelonNameTxt(echelonType, curSelectTeamIdx)
    local content = CsXTextManager.GetText("BfrtDeployTipContent", characterName, oldTeamName, newTeamName)
    XUiManager.DialogTip(title, content, XUiManager.DialogType.Normal, function()
        -- 如果不替换就保留原来的数据
        -- 判断编队是否改变了原来的成员位置
        self:_CloseCallback(teamData, charPos)
        cb()
    end, function()
        local inEchelonIndex, inEchelonType = XDataCenter.BfrtManager.CheckIsInTeamList(characterId)
        if inEchelonIndex and inEchelonType then
            local groupId = XDataCenter.BfrtManager.GetViewGroupId()
            local stageIdList = XDataCenter.BfrtManager.GetStageIdList(groupId)
            if XDataCenter.BfrtManager.CheckIsGroupStageRecordStage(groupId, stageIdList[inEchelonIndex]) then
                self:_CloseCallback(teamData, charPos)
                XDataCenter.BfrtManager.TipStageIsPass()
            else
                teamData[charPos] = characterId
                -- 缓存被替换的数据
                --tableInsert(self._ReplaceTeamData, { TeamIdx = otherTeamIdx, TeamPos = otherTeamPos })
                XDataCenter.BfrtManager.SetViewGroupFightTeamData(otherTeamIdx, otherTeamPos, 0)
            end
        end
        cb()
    end)
end

function XUiBfrtBattleRoleRoomProxy:_CloseCallback(teamData, charPos)
    local oldCharacterId = XDataCenter.BfrtManager.GetCharacterIdByTeamIdxAndPos(XDataCenter.BfrtManager.GetCurSelectTeamIdx(), charPos)
    if self:_CheckTeamDataHasCharacterWithoutPos(teamData, oldCharacterId, charPos) then
        teamData[charPos] = 0
    else
        teamData[charPos] = oldCharacterId
    end
end

function XUiBfrtBattleRoleRoomProxy:_CheckTeamDataHasCharacterWithoutPos(teamData, characterId, withoutPos)
    for pos, charId in pairs(teamData) do
        if withoutPos ~= pos then
            if charId == characterId then
                return true
            end
        end
    end

    return false
end

return XUiBfrtBattleRoleRoomProxy