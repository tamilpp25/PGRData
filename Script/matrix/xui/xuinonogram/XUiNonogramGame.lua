---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by heyupeng.
--- DateTime: 2024/8/1 11:04
---

local STAGE_FINISH_CHANGE_TIME = 0.5
local GRID_BLOCK_OPEN_RIGHT_CUR_ID = 4972
local GRID_BLOCK_OPEN_WRONG_CUR_ID = 4973

local XUiNonogramGridBlock = require("XUi/XUiNonogram/XUiNonogramGridBlock")
local XUiNonogramGridBoomNum = require("XUi/XUiNonogram/XUiNonogramGridBoomNum")

---@class XUiNonogramGame:XLuaUi
---@field _Control XNonogramControl
local XUiNonogramGame = XLuaUiManager.Register(XLuaUi, "UiNonogramGame")

function XUiNonogramGame:OnAwake()

end

function XUiNonogramGame:OnStart(chapterId)
    self:InitViewData(chapterId)
    self:RegisterBtnListener()

    self:InitGame()
end

function XUiNonogramGame:OnEnable()
    self:AddEventListener()
    self.UpdateTimer = XScheduleManager.ScheduleForever(handler(self, self.OnUpdate), 17)
end

function XUiNonogramGame:OnDisable()
    self:RemoveEventListener()

    if self.UpdateTimer then
        XScheduleManager.UnSchedule(self.UpdateTimer)
        self.UpdateTimer = nil
    end

    if self.DeductTimeTimerId then
        XScheduleManager.UnSchedule(self.DeductTimeTimerId)
        self.DeductTimeTimerId = nil
    end
end

function XUiNonogramGame:OnDestroy()

end

function XUiNonogramGame:AddEventListener()
    XEventManager.AddEventListener(XEventId.EVENT_NONOGRAM_READY_END, self.OnReadyEnd, self)
    XEventManager.AddEventListener(XEventId.EVENT_NONOGRAM_GAME_FINISH, self.OnGameFinish, self)
    XEventManager.AddEventListener(XEventId.EVENT_NONOGRAM_GRID_BLOCK_OPEN, self.OnGridBlockOpen, self)
    XEventManager.AddEventListener(XEventId.EVENT_NONOGRAM_STAGE_FINISH, self.OnStageFinish, self)
    XEventManager.AddEventListener(XEventId.EVENT_NONOGRAM_GRID_BLOCK_TIP, self.OnShowGridTip, self)
    XEventManager.AddEventListener(XEventId.EVENT_NONOGRAM_ROW_COLUMN_FINISH, self.OnRowAndColumnFinish, self)
end

function XUiNonogramGame:RemoveEventListener()
    XEventManager.RemoveEventListener(XEventId.EVENT_NONOGRAM_READY_END, self.OnReadyEnd, self)
    XEventManager.RemoveEventListener(XEventId.EVENT_NONOGRAM_GAME_FINISH, self.OnGameFinish, self)
    XEventManager.RemoveEventListener(XEventId.EVENT_NONOGRAM_GRID_BLOCK_OPEN, self.OnGridBlockOpen, self)
    XEventManager.RemoveEventListener(XEventId.EVENT_NONOGRAM_STAGE_FINISH, self.OnStageFinish, self)
    XEventManager.RemoveEventListener(XEventId.EVENT_NONOGRAM_GRID_BLOCK_TIP, self.OnShowGridTip, self)
    XEventManager.RemoveEventListener(XEventId.EVENT_NONOGRAM_ROW_COLUMN_FINISH, self.OnRowAndColumnFinish, self)
end

function XUiNonogramGame:OnReadyEnd()
    self.OneGridWidth = self.PanelBlockWidth / #self.ColumnCountTable
    self.OneGridHeight = self.PanelBlockHeight / #self.RowCountTable

    self:SetAllGridNumUnknownActive(false)
    self.PanelCountdown.gameObject:SetActiveEx(false)
    self:SetGridBlockFalseByAllError()
end

function XUiNonogramGame:OnGameFinish()
    self.IsCanSliderClick = false
    self:RefreshPanelTime()
    local isPassAllStage = self._Control:CheckPassAllStage()
    self:OpenChildUi("UiNonogramPopupSettlement", true, isPassAllStage, function()
        self:Close()
    end)
end

function XUiNonogramGame:OnGridBlockOpen(rowIndex, colIndex, isRight, deductTime)
    --local isRight = self._Control:CheckGridBlockRight(rowIndex, colIndex)
    self.GridBlockTable[rowIndex][colIndex]:SetStatus(isRight and XEnumConst.Nonogram.NonogramGridBlockStatus.TrueStatus or XEnumConst.Nonogram.NonogramGridBlockStatus.FalseStatus)
    if XTool.IsNumberValid(deductTime) then
        self:ShowDeductTime(deductTime)
    end
    self.GridBlockTable[rowIndex][colIndex]:SetTipsActive(false)
    local curId = isRight and GRID_BLOCK_OPEN_RIGHT_CUR_ID or GRID_BLOCK_OPEN_WRONG_CUR_ID
    XLuaAudioManager.PlayAudioByType(XLuaAudioManager.SoundType.SFX, curId)
end

function XUiNonogramGame:OnStageFinish()
    self.IsCanSliderClick = false
    self._Control:PauseGame()
    self.PanelComplete.gameObject:SetActiveEx(true)
    self:RefreshPanelReward()
    self:Tween(STAGE_FINISH_CHANGE_TIME, nil, function()
        self:RefreshPanelCheckerboard()
        self.PanelComplete.gameObject:SetActiveEx(false)
        self:SetGridBlockFalseByAllError()
        self._Control:ResumeGame()
    end)
end

function XUiNonogramGame:OnShowGridTip(rowIndex, colIndex)
    self.GridBlockTable[rowIndex][colIndex]:SetTipsActive(true)
end

function XUiNonogramGame:OnRowAndColumnFinish(rowIndex, colIndex)
    self:SetFalseStatusWithUnKnown(rowIndex, true)
    self:SetFalseStatusWithUnKnown(colIndex, false)
end

-- 根据一行或一列都是错误的，把该行或一列的未知格子设置为错误
function XUiNonogramGame:SetGridBlockFalseByAllError()
    for index, rowCountValue in ipairs(self.RowCountTable) do
        if rowCountValue == 0 then
            self:SetFalseStatusWithUnKnown(index, true)
        end
    end
    for index, rowCountValue in ipairs(self.ColumnCountTable) do
        if rowCountValue == 0 then
            self:SetFalseStatusWithUnKnown(index, false)
        end
    end
end

function XUiNonogramGame:SetFalseStatusWithUnKnown(index, isRow)
    if not XTool.IsNumberValid(index) then
        return
    end

    if isRow then
        for _, gridItem in ipairs(self.GridBlockTable[index]) do
            if gridItem:CheckStatus(XEnumConst.Nonogram.NonogramGridBlockStatus.UnKnown) then
                gridItem:SetStatus(XEnumConst.Nonogram.NonogramGridBlockStatus.FalseStatus)
            end
        end
    else
        for _, rowGridItems in ipairs(self.GridBlockTable) do
            if rowGridItems[index]:CheckStatus(XEnumConst.Nonogram.NonogramGridBlockStatus.UnKnown) then
                rowGridItems[index]:SetStatus(XEnumConst.Nonogram.NonogramGridBlockStatus.FalseStatus)
            end
        end
    end
end

function XUiNonogramGame:OnUpdate()
    if self._Control:CheckGameStatus(XEnumConst.Nonogram.NonogramStageGameStatus.Playing) then
        self:RefreshPanelTime()
    elseif self._Control:CheckGameStatus(XEnumConst.Nonogram.NonogramStageGameStatus.Ready) then
        self:RefreshCountDown()
    end
end

function XUiNonogramGame:InitViewData(chapterId)
    self.ChapterId = chapterId
    self.UiCamera = self.Transform:GetComponent("Canvas").worldCamera
    self.GridBlockTable = { { XUiNonogramGridBlock.New(self.GridBlock, self, 1, 1, self.PanelBlock, self.UiCamera) } }
    self.GridNumRowTable = {}
    self.GridNumColTable = {}

    self.PanelBlockWidth = self.PanelBlock.rect.width
    self.PanelBlockHeight = self.PanelBlock.rect.height
    self.IsCanSliderClick = false
end

function XUiNonogramGame:RegisterBtnListener()
    self:RegisterClickEvent(self.BtnBack, self.OnBtnBackClick)
    self:RegisterClickEvent(self.BtnMainUi, self.OnBtnMainUiClick)
    self:BindHelpBtn(self.BtnHelp, "UiNonogramMain")
    self:RegisterClickEvent(self.BtnEnd, self.OnBtnBackClick, true, true, 0.5)
end

function XUiNonogramGame:CustomExitGame(cb)
    self._Control:PauseGame()
    self:OpenChildUi("UiNonogramPopupSettlement", false, false, function()
        self._Control:RequestChapterExit(self.ChapterId, function()
            if cb then
                cb()
            end
        end)
    end, function()
        self._Control:ResumeGame()
    end)
end

function XUiNonogramGame:OnBtnBackClick()
    self:CustomExitGame(function()
        self:Close()
    end)
end

function XUiNonogramGame:OnBtnMainUiClick()
    self:CustomExitGame(function()
        XLuaUiManager.RunMain()
    end)
end

function XUiNonogramGame:InitGame()
    self:InitData()

    self:RefreshPanelReward()
    self:RefreshPanelTime()
    self:RefreshPanelCheckerboard()

    self:StartCountDown()
end

function XUiNonogramGame:InitData()
    self._Control:ResetOneGameUnlockCGItemCount()
end

function XUiNonogramGame:RefreshPanelReward()
    local unlockCGItemId = self._Control:GetUnlockCgItemId(self.ChapterId)
    if XTool.IsNumberValid(unlockCGItemId) then
        self.RImgIcon:SetRawImage(XDataCenter.ItemManager.GetItemIcon(unlockCGItemId))
        self.TxtNum.text = self._Control:GetOneGameUnlockCGItemCount()
        self.PanelReward.gameObject:SetActiveEx(true)
    else
        self.PanelReward.gameObject:SetActiveEx(false)
    end
end

function XUiNonogramGame:RefreshPanelTime()
    local _, _, _, _, minutes, seconds = XUiHelper.GetTimeNumber(math.ceil(self._Control:GetGameRemainTime()))
    self.TxtTime.text = string.format("%02d:%02d", minutes, seconds)
    self.ImgBar.fillAmount = self._Control:GetGameRemainTimeProgress()
end

function XUiNonogramGame:ShowDeductTime(deductTime)
    if self.DeductTimeTimerId then
        XScheduleManager.UnSchedule(self.DeductTimeTimerId)
        self.DeductTimeTimerId = nil
    end

    self.TxtMinus.gameObject:SetActiveEx(true)
    self.TxtMinus.text = "-" .. deductTime
    self.DeductTimeTimerId = XScheduleManager.ScheduleOnce(function()
        self.TxtMinus.gameObject:SetActiveEx(false)
        self.DeductTimeTimerId = nil
    end, 1000)
end

function XUiNonogramGame:RefreshPanelCheckerboard()
    local curGameMap = self._Control:GetCurGameGridMap()
    self.RowCountTable = {}
    self.ColumnCountTable = {}
    for rowIndex, columnData in ipairs(curGameMap) do
        if not self.GridBlockTable[rowIndex] then
            self.GridBlockTable[rowIndex] = {}
        end
        for columnIndex, value in ipairs(columnData) do
            if not self.GridBlockTable[rowIndex][columnIndex] then
                local gridGo = XUiHelper.Instantiate(self.GridBlock, self.PanelBlock)
                self.GridBlockTable[rowIndex][columnIndex] = XUiNonogramGridBlock.New(gridGo, self, rowIndex, columnIndex, self.PanelBlock, self.UiCamera)
            end

            self.GridBlockTable[rowIndex][columnIndex]:SetStatus(XEnumConst.Nonogram.NonogramGridBlockStatus.UnKnown)

            if not self.RowCountTable[rowIndex] then
                self.RowCountTable[rowIndex] = 0
            end
            if not self.ColumnCountTable[columnIndex] then
                self.ColumnCountTable[columnIndex] = 0
            end

            self.RowCountTable[rowIndex] = self.RowCountTable[rowIndex] + value
            self.ColumnCountTable[columnIndex] = self.ColumnCountTable[columnIndex] + value
        end
    end
    self:RefreshPanelNum(self.RowCountTable, true)
    self:RefreshPanelNum(self.ColumnCountTable, false)
end

function XUiNonogramGame:RefreshPanelNum(data, isRow)
    local viewGridTable = isRow and self.GridNumRowTable or self.GridNumColTable
    local parentRoot = isRow and self.ListVertical or self.ListHorizontal
    local numGrid = isRow and self.GridNum2 or self.GridNum
    for index, boomCount in ipairs(data) do
        if not viewGridTable[index] then
            local go = XUiHelper.Instantiate(numGrid, parentRoot)
            viewGridTable[index] = XUiNonogramGridBoomNum.New(go, self)
        end

        viewGridTable[index]:SetBoomCount(boomCount)
        viewGridTable[index].GameObject:SetActiveEx(true)
    end
end

function XUiNonogramGame:StartCountDown()
    self.TxtTips.text = XUiHelper.GetText("NonogramCountDownTips")
    self.PanelCountdown.gameObject:SetActiveEx(true)
    self:SetAllGridNumUnknownActive(true)
    self._Control:StartCountDown()
end

function XUiNonogramGame:RefreshCountDown()
    --local _, _, _, _, minutes, seconds = XUiHelper.GetTimeNumber(self._Control:GetGameReadyRemainTime())
    --self.TxtCountDownTime.text = string.format("%02d:%02d", minutes, seconds)
    self.TxtCountDownTime.text = math.ceil(self._Control:GetGameReadyRemainTime())
end

function XUiNonogramGame:SetAllGridNumUnknownActive(isActive)
    for _, viewGrid in ipairs(self.GridNumRowTable) do
        viewGrid:SetImgUnknownActive(isActive)
    end

    for _, viewGrid in ipairs(self.GridNumColTable) do
        viewGrid:SetImgUnknownActive(isActive)
    end
end

function XUiNonogramGame:OnClickPanelBlockWithPosition(panelBlockPosition)
    if not self.IsCanSliderClick then
        return
    end
    local rowIndex, columnIndex = self:GetGridBlockIndexWithPosition(panelBlockPosition)
    if XTool.IsNumberValid(rowIndex) and XTool.IsNumberValid(columnIndex) then
        if self.GridBlockTable[rowIndex][columnIndex] then
            self.GridBlockTable[rowIndex][columnIndex]:OnBtnGridBlockClick()
        end
    end
end

function XUiNonogramGame:GetGridBlockIndexWithPosition(panelBlockPosition)
    local deltaX = panelBlockPosition.x + self.PanelBlockWidth / 2
    if deltaX < 0 or deltaX > self.PanelBlockWidth then
        return
    end
    local deltaY = -panelBlockPosition.y + self.PanelBlockHeight / 2
    if deltaY < 0 or deltaY > self.PanelBlockHeight then
        return
    end
    local columnIndex = math.ceil(deltaX / self.OneGridWidth)
    local rowIndex = math.ceil(deltaY / self.OneGridHeight)
    return rowIndex, columnIndex
end
