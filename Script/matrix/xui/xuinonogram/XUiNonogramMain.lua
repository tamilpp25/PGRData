local XUiPanelAsset = require("XUi/XUiCommon/XUiPanelAsset")
---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by heyupeng.
--- DateTime: 2024/8/1 11:04
---

---@class XUiNonogramMain : XLuaUi
---@field _Control XNonogramControl
local XUiNonogramMain = XLuaUiManager.Register(XLuaUi, "UiNonogramMain")

function XUiNonogramMain:OnAwake()

end

function XUiNonogramMain:OnStart()
    self:InitViewData()
    self:InitAutoClose()
    self:InitBtnListener()
    self:InitAssetPanel()
    self:Refresh()
    self:InitRedPoint()
    self.IsStartRefresh = true
end

function XUiNonogramMain:OnEnable()
    if self.IsStartRefresh then
        self.IsStartRefresh = false
    else
        self:RefreshChapterList()
        self:RefreshPanelCG(self.CurSelectChapterIndex)
    end
end

function XUiNonogramMain:OnDisable()

end

function XUiNonogramMain:OnDestroy()

end

function XUiNonogramMain:InitViewData()
    self.ChapterRootList = {}
    for i = 1, 6 do
        table.insert(self.ChapterRootList, self["StageRoot" .. i])
    end
    self.ChapterItemList = { self.GridStage }
    self.ChapterLockItemList = { XUiHelper.TryGetComponent(self.GridStage.transform, "DisableRoot") }
    self.ChapterUnLockAnimNodeList = { XUiHelper.TryGetComponent(self.GridStage.transform, "AnimEnable/GridStageNromalEnable") }
    self.ChapterItemCanvasGroupList = { self.GridStage.transform:GetComponent("CanvasGroup") }
    self.CurSelectChapterIndex = 0
    self.CurSelectChapterId = 0
    self.RewardGoodGridCommons = {}
end

function XUiNonogramMain:InitBtnListener()
    self:RegisterClickEvent(self.BtnBack, self.Close)
    self:RegisterClickEvent(self.BtnMainUi, function()
        XLuaUiManager.RunMain()
    end)
    self:BindHelpBtn(self.BtnHelp)
    self:RegisterClickEvent(self.BtnBuy, self.OnBtnBuyClick, true, true, 0.5)
    self:RegisterClickEvent(self.BtnPlay, self.OnBtnPlayClick, true, true, 0.5)
end

function XUiNonogramMain:OnBtnChapterClick(index)
    if self.CurSelectChapterIndex == index then
        return
    end

    if not self._Control:CheckCanSelectChapter(index) then
        XUiManager.TipText("NonogramNeedCompleteLastChapter")
        return
    end

    self:RefreshPanelCG(index)

    self.CurSelectChapterIndex = index
end

function XUiNonogramMain:OnBtnBuyClick()
    if XTool.IsNumberValid(self.CurSelectChapterId) then
        self._Control:RequestChapterUnlock(self.CurSelectChapterId, function()
            self:RefreshChapterList()
            self:RefreshPanelCG(self.CurSelectChapterIndex)
            self.ChapterUnLockAnimNodeList[self.CurSelectChapterIndex]:PlayTimelineAnimation()
        end)
    end
end

function XUiNonogramMain:OnBtnPlayClick()
    if XTool.IsNumberValid(self.CurSelectChapterId) then
        self._Control:RequestChapterStart(self.CurSelectChapterId, function()
            -- 进入关卡
            XLuaUiManager.Open("UiNonogramGame", self.CurSelectChapterId)
        end)
    end
end

function XUiNonogramMain:InitAssetPanel()
    XUiPanelAsset.New(self, self.PanelAsset, XDataCenter.ItemManager.ItemId.NonogramCoin)
end

function XUiNonogramMain:Refresh()
    --self.TxtTitle.text = self._Control:GetCurActivityTitle()
    self:RefreshRemainTime()
    self:RefreshChapterList()

    self.BtnChapterGroup:SelectIndex(XTool.IsNumberValid(self.CurSelectChapterIndex) and self.CurSelectChapterIndex or self._Control:GetCurChapterIndexAndId())
end

function XUiNonogramMain:InitRedPoint()
    for index, chapterBtnItem in ipairs(self.ChapterItemList) do
        local chapterId = self._Control:GetChapterIdByIndex(index)
        if XTool.IsNumberValid(chapterId) then
            self:AddRedPointEvent(chapterBtnItem.ReddotObj, nil, self, { "CONDITION_NONOGRAM_CHAPTER" }, chapterId, true)
        end
    end
end

function XUiNonogramMain:InitAutoClose()
    local endTime = self._Control:GetEndTime()
    self:SetAutoCloseInfo(endTime, function(isClose)
        if isClose then
            self._Control:HandleActivityEndTime()
        else
            self:RefreshRemainTime()
        end
    end)
end

function XUiNonogramMain:RefreshRemainTime()
    if XTool.IsNumberValid(self.AutoCloseEndTime) then
        local remainTime = self.AutoCloseEndTime - XTime.GetServerNowTimestamp()
        self.TxtTime.text = XUiHelper.GetTime(remainTime, XUiHelper.TimeFormatType.ACTIVITY)
    end
end

function XUiNonogramMain:RefreshChapterList()
    for _, chapterRoot in ipairs(self.ChapterRootList) do
        chapterRoot.gameObject:SetActiveEx(false)
    end

    local chapterIds = self._Control:GetChapterIds()
    local curChapterIdx, _ = self._Control:GetCurChapterIndexAndId()
    for i = 1, #chapterIds do
        local chapterRoot = self.ChapterRootList[i]
        if not chapterRoot then
            chapterRoot = XUiHelper.Instantiate(self.ChapterRootList[1], self.ChapterRootList[1].parent)
            self.ChapterRootList[i] = chapterRoot
        end

        local chapterItem = self.ChapterItemList[i]
        if not chapterItem then
            local go = XUiHelper.Instantiate(self.ChapterItemList[1].gameObject, chapterRoot)
            self.ChapterItemList[i] = go:GetComponent("XUiButton")
            self.ChapterLockItemList[i] = XUiHelper.TryGetComponent(go.transform, "DisableRoot")
            self.ChapterUnLockAnimNodeList[i] = XUiHelper.TryGetComponent(go.transform, "AnimEnable/GridStageNromalEnable")
            self.ChapterItemCanvasGroupList[i] = go.transform:GetComponent("CanvasGroup")
        end

        self.ChapterItemList[i].transform.localPosition = Vector3.zero

        chapterRoot.gameObject:SetActiveEx(true)

        -- 刷新按钮状态
        local chapterId = chapterIds[i]
        local chapterBtn = self.ChapterItemList[i]
        local btnImagePath = self._Control:GetBtnChapterImagePath(chapterId)
        chapterBtn:SetSprite(btnImagePath)
        local chapterName = self._Control:GetChapterName(chapterId)
        chapterBtn:SetName(chapterName)
        local isChapterUnLock = false
        if self._Control:CheckChapterIsRebrushById(chapterId) then
            isChapterUnLock = self._Control:CheckChapterUnLock(chapterId) and self._Control:CheckCanSelectChapter(i)
        else
            isChapterUnLock = self._Control:CheckChapterUnLock(chapterId)
        end
        self.ChapterLockItemList[i].gameObject:SetActiveEx(not isChapterUnLock)
        chapterBtn.ImageList[0].gameObject:SetActiveEx(isChapterUnLock)
        chapterBtn.ImageList[3].gameObject:SetActiveEx(isChapterUnLock)
        chapterBtn:SetDisable(not isChapterUnLock and i ~= curChapterIdx)
    end

    local selectIndex = XTool.IsNumberValid(self.CurSelectChapterIndex) and self.CurSelectChapterIndex or 1
    self.BtnChapterGroup:Init(self.ChapterItemList, handler(self, self.OnBtnChapterClick))
    self.BtnChapterGroup:SelectIndex(selectIndex, false)
end

function XUiNonogramMain:RefreshPanelCG(index)
    self.CurSelectChapterId = self._Control:GetChapterIdByIndex(index)
    if XTool.IsNumberValid(self.CurSelectChapterId) then
        if self._Control:CheckChapterCanUnLockCG(self.CurSelectChapterId) then
            self._Control:RequestUnlockCg(self.CurSelectChapterId, function(rewardGoodsList)
                XUiManager.OpenUiObtain(rewardGoodsList, nil, function()
                    self.ChapterItemCanvasGroupList[index].alpha = 1
                end, function()
                    self.ChapterItemCanvasGroupList[index].alpha = 1
                end)
                self:RefreshChapterList()
                self:DoRefreshPanelCG()
            end)
        else
            self:DoRefreshPanelCG()
        end
    end
end

function XUiNonogramMain:DoRefreshPanelCG()
    if XTool.IsNumberValid(self.CurSelectChapterId) then
        self.ChapterState = self._Control:GetChapterState(self.CurSelectChapterId)
        if self.ChapterState == XEnumConst.Nonogram.NonogramChapterStatus.Reward then
            self.RImgCg:SetRawImage(self._Control:GetCGImagePath(self.CurSelectChapterId))
            self.RImgCg.gameObject:SetActiveEx(true)
        else
            self.RImgCg.gameObject:SetActiveEx(false)
        end

        self:RefreshPanelLock()
        self:RefreshPanelDetail()
        self:RefreshPanelPlay()
        self:RefreshPanelReward()
    end
end

function XUiNonogramMain:RefreshPanelLock()
    if self.ChapterState == XEnumConst.Nonogram.NonogramChapterStatus.Lock then
        self.PanelLock.gameObject:SetActiveEx(true)
    else
        self.PanelLock.gameObject:SetActiveEx(false)
        return
    end

    local unlockItemIcon = XDataCenter.ItemManager.GetItemIcon(XDataCenter.ItemManager.ItemId.NonogramCoin)
    if not string.IsNilOrEmpty(unlockItemIcon) then
        self.BtnBuy:SetRawImage(unlockItemIcon)
    end

    local unlockItemNeedCount = self._Control:GetUnlockItemNeedCount(self.CurSelectChapterId)
    self.BtnBuy:SetNameByGroup(0, unlockItemNeedCount)

    if XDataCenter.ItemManager.CheckItemCountById(XDataCenter.ItemManager.ItemId.NonogramCoin, unlockItemNeedCount) then
        self.PanelOn.gameObject:SetActiveEx(true)
        self.PanelOff.gameObject:SetActiveEx(false)
    else
        self.PanelOn.gameObject:SetActiveEx(false)
        self.PanelOff.gameObject:SetActiveEx(true)
    end
end

function XUiNonogramMain:RefreshPanelDetail()
    if self.ChapterState == XEnumConst.Nonogram.NonogramChapterStatus.Reward then
        self.PanelDetail.gameObject:SetActiveEx(true)
    else
        self.PanelDetail.gameObject:SetActiveEx(false)
        return
    end
    self.TxtDetail.text = self._Control:GetCGDetail(self.CurSelectChapterId)
end

function XUiNonogramMain:RefreshPanelPlay()
    if self.ChapterState == XEnumConst.Nonogram.NonogramChapterStatus.Init or
            self.ChapterState == XEnumConst.Nonogram.NonogramChapterStatus.Ongoing
    then
        self.PanelPlay.gameObject:SetActiveEx(true)
    else
        self.PanelPlay.gameObject:SetActiveEx(false)
        return
    end

    self.TxtPlayTips.text = self._Control:GetPlayTips(self.CurSelectChapterId)
    local unlockCGItemId = self._Control:GetUnlockCgItemId(self.CurSelectChapterId)
    if XTool.IsNumberValid(unlockCGItemId) then
        local hasUnlockItemCount = XDataCenter.ItemManager.GetItem(unlockCGItemId):GetCount()
        local needUnlockItemCount = self._Control:GetUnlockCgItemNum(self.CurSelectChapterId)
        self.TxtNum.text = XUiHelper.GetText("NonogramTextUnlockCGNum", hasUnlockItemCount, needUnlockItemCount)
        self.RImgIcon:SetRawImage(XDataCenter.ItemManager.GetItemIcon(unlockCGItemId))
        self.ImgBar.fillAmount = hasUnlockItemCount / needUnlockItemCount
        self.PanelUnlockCgProgress.gameObject:SetActiveEx(true)
    else
        self.PanelUnlockCgProgress.gameObject:SetActiveEx(false)
    end
    if self._Control:CheckChapterIsRebrushById(self.CurSelectChapterId) then
        self.BtnPlay:ShowReddot(false)
    else
        self.BtnPlay:ShowReddot(true)
    end
end

function XUiNonogramMain:RefreshPanelReward()
    if self.ChapterState ~= XEnumConst.Nonogram.NonogramChapterStatus.Reward then
        self.PanelReward.gameObject:SetActiveEx(true)
    else
        self.PanelReward.gameObject:SetActiveEx(false)
        return
    end

    local rewardId = self._Control:GetChapterRewardId(self.CurSelectChapterId)
    if not XTool.IsNumberValid(rewardId) then
        self.PanelReward.gameObject:SetActiveEx(false)
        return
    end

    local rewardGoods = XRewardManager.GetRewardList(rewardId)
    XTool.UpdateDynamicGridCommon(self.RewardGoodGridCommons, rewardGoods, self.GridReward, self)
end